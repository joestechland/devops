---
- hosts: localhost  
  become: true

  vars_files:
    vars/main_vars.yml

  tasks:

# must install openssh-server on new machine first, then copy ofer ssh key

    - name: Update apt-get repo and cache.
      apt:
        update_cache: true

    - name: Upgrade all apt packages
      apt:
        upgrade: dist
        force_apt_get: true

    - name: install visual studio code.
      snap:
        name: code
        classic: true


    # - name: add user oracle.
    #   user:
    #     name: oracle
    #     group: oracle
    #     #   - adm
    #     #   - cdrom
    #     #   - sudo
    #     #   - dip
    #     #   - plugdev
    #     #   - lpadmin
    #     #   - lxd
    #     #   - sambashare
    #     createhome: true
    #     password: "{{ vaulted_password | password_hash('sha512') }}"
    #     system: true

    - name: install ansible and linters and git.
      apt:
        pkg:
          - ansible
          - yamllint
          - ansible-lint
          - git
          - curl
          - python3
          - python3-pip
          - gkrellm
          - sshfs
    - name: Install VM, Docker, K8s.
      apt:
        pkg:
          - vagrant
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - docker.io

    - name: Update apt-get repo and cache.
      apt:
        update_cache: true

    - name: update python 3 alternatives
      command: "update-alternatives --install /usr/bin/python python /usr/bin/python3 1"


    - name: remove unwanted packages.
      apt:
        pkg:
          - thunderbird
          - libreoffice*
          - rhythmbox
        state: absent

    - name: Clone a devops repo with separate git directory.
      git:
        repo: "{{ git_root }}/{{ devops_repo }}"
        dest: "/home/{{ user }}{{ devops_repo }}"

    - name: Recursively change ownership of devops directory
      file:
        path: "/home/{{ user }}/{{ devops_repo }}"
        state: directory
        recurse: true
        owner: "{{ user }}"

    - name: Clone a devops_class repo with separate git directory.
      git:
        repo: "{{ git_root }}/{{ devops_class_repo }}"
        dest: "/home/{{ user }}{{ devops_class_repo }}"


    - name: Recursively change ownership of devops_class directory
      file:
        path: "/home/{{ user }}/{{ devops_class_repo }}"
        state: directory
        recurse: true
        owner: "{{ user }}"

# https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
    - name: Download oci install.sh.
      get_url:
        url: https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        dest: "/home/{{ user }}/Downloads/install.sh"
        mode: '0777'
        owner: "{{ user }}"

    - name: Install oci cli.
      shell: >
        /home/{{ user }}/Downloads/install.sh
        --install-dir "/home/{{ user }}/lib/oracle-cli"
        --exec-dir "/home/{{ user }}/bin"
        --script-dir "/home/{{ user }}/bin/oci-cli-scripts"
        --optional-features db
        --update-path-and-enable-tab-completion
        --rc-file-path "/home/{{ user }}/.bashrc"


    - name: Recursively change ownership of a directory.
      file:
        path: /home/{{ user }}/bin
        state: directory
        recurse: true
        owner: "{{ user }}"

    - name: Install oci ansible modules.
      pip:
        name: oci

    - name: install OCI Ansible galaxy collections.
      command: ansible-galaxy collection install oracle.oci

    - name: Create sample up OCI Config file
      command: /home/oracle/bin/oci setup oci-cli-rc --file "/home/{{ user }}/.oci/oci_cli_rc"
    # copy config file
    # sshfs oracle@ed-devops.us.oracle.com:/home/oracle/ocic_scripts/Ansible_Playbooks/ ~/ed-devops
    # cd && fusermount -u ~/ed-devops
    # mkdir ed-devops

    - name: Update apt-get repo and cache.
      apt:
        update_cache: true
    - name: Upgrade all apt packages
      apt:
        upgrade: dist
        force_apt_get: true


# install maven
# install jdk and remove open jdk


# https://www.ansibletutorials.com/adding-users
# install kubernetes and docker is a schwaz - do it in a separate playbook
# https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
